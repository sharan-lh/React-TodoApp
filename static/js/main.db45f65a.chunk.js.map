{"version":3,"sources":["TodoItem.js","todosData.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","style","font","color","textDecoration","text","todosData","App","React","Component","constructor","super","this","state","todos","bind","setState","prevState","map","todo","render","todoItems","key","ReactDOM","document","getElementById"],"mappings":"gMAoBeA,MAlBf,SAAkBC,GAMd,OACI,yBAAKC,UAAU,aACX,2BACIC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,IAAMN,EAAMO,aAAaP,EAAMI,KAAKI,MAElD,uBAAGC,MAAST,EAAMI,KAAKC,UAZR,CACnBK,KAAO,SACPC,MAAO,UACPC,eAAgB,gBASwC,MAAOZ,EAAMI,KAAKS,QCanEC,MA5BG,CACd,CACIN,GAAI,EACJK,KAAM,qBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,WACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mCACNR,WAAW,ICRnB,MAAMU,UAAYC,IAAMC,UACpBC,cACIC,QACAC,KAAKC,MAAQ,CACTC,MAAOR,GAEXM,KAAKb,aAAea,KAAKb,aAAagB,KAAKH,MAG/Cb,aAAaC,GACTY,KAAKI,SAASC,IAOH,CACHH,MAPiBG,EAAUH,MAAMI,IAAIC,IACjCA,EAAKnB,KAAOA,IACZmB,EAAKtB,WAAasB,EAAKtB,WAEpBsB,OAQnBC,SACI,MAAMC,EAAYT,KAAKC,MAAMC,MAAMI,IAAItB,GAAQ,kBAAC,EAAD,CAAU0B,IAAK1B,EAAKI,GAAIJ,KAAMA,EAAMG,aAAca,KAAKb,gBAEtG,OACI,yBAAKN,UAAU,aACV4B,IAMFd,Q,OC9CfgB,EAASH,OAAO,kBAAC,EAAD,MAASI,SAASC,eAAe,W","file":"static/js/main.db45f65a.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        font : \"italic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <input      \r\n                type=\"checkbox\" \r\n                checked={props.item.completed} \r\n                onChange={() => props.handleChange(props.item.id)}\r\n            />\r\n            <p style = {props.item.completed ? completedStyle : null}>{props.item.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","/**\r\n * Let's make it so our checkbox can actually mark our todo as complete or incomplete!\r\n * This challenge is a little more involved than some of the past ones. Check the comments \r\n * in the code for some help on accomplishing this one\r\n * \r\n * Challenge: \r\n * 1. Create an event handler in the App component for when the checkbox is clicked (which is an `onChange` event)\r\n *    a. This method will be the trickest part. Check the comments in the stubbed-out method below for some pseudocode to help guide you through this part\r\n * 2. Pass the method down to the TodoItem component\r\n * 3. In the TodoItem component, make it so when the `onChange` event happens, it calls the `handleChange` method and passes the id of the todo into the function\r\n */\r\n\r\nimport React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\nimport todosData from \"./todosData\"\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            todos: todosData\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    \r\n    handleChange(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange={this.handleChange}/>)\r\n        \r\n        return (\r\n            <div className=\"todo-list\">\r\n                {todoItems}\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}